{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{StatusBar}from'expo-status-bar';import React,{useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import moment from'moment';import\"./styles.css\";export default function Calendar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),calendar=_useState2[0],setCalendar=_useState2[1];var value=moment();var startDay=value.clone().startOf(\"month\").startOf(\"week\");var endDay=value.clone().endOf(\"month\").endOf(\"week\");var day=startDay.clone().subtract(1,\"day\");while(day.isBefore(endDay,\"day\")){calendar.push(Array(7).fill(0).map(function(){return day.add(1,\"day\").clone();}));}return React.createElement(View,null,calendar.map(function(week){return React.createElement(View,{style:styles.week},week.map(function(day){return React.createElement(View,{style:styles.days},React.createElement(Text,{style:styles.text},day.format(\"D\").toString()));}));}));}var styles=StyleSheet.create({week:{flexDirection:\"row\",textAlign:'center'},days:{margin:40,flexWrap:'wrap',display:'flex',position:'relative'},text:{fontSize:16,justifyContent:\"center\"}});","map":{"version":3,"sources":["/home/isogogo/calendarProject-master/Calendar.js"],"names":["StatusBar","React","useState","moment","Calendar","calendar","setCalendar","value","startDay","clone","startOf","endDay","endOf","day","subtract","isBefore","push","Array","fill","map","add","week","styles","days","text","format","toString","StyleSheet","create","flexDirection","textAlign","margin","flexWrap","display","position","fontSize","justifyContent"],"mappings":"iEAAA,OAASA,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,2KAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,qBAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eACAF,QAAQ,CAAC,EAAD,CADR,wCACxBG,QADwB,eACfC,WADe,eAG/B,GAAMC,CAAAA,KAAK,CAAGJ,MAAM,EAApB,CACA,GAAMK,CAAAA,QAAQ,CAAGD,KAAK,CAACE,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB,CACA,GAAMC,CAAAA,MAAM,CAAGJ,KAAK,CAACE,KAAN,GAAcG,KAAd,CAAoB,OAApB,EAA6BA,KAA7B,CAAmC,MAAnC,CAAf,CACA,GAAMC,CAAAA,GAAG,CAAGL,QAAQ,CAACC,KAAT,GAAiBK,QAAjB,CAA0B,CAA1B,CAA6B,KAA7B,CAAZ,CAGA,MAAMD,GAAG,CAACE,QAAJ,CAAaJ,MAAb,CAAoB,KAApB,CAAN,CAAkC,CAC9BN,QAAQ,CAACW,IAAT,CACIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,EAAiBC,GAAjB,CAAsB,iBAAMN,CAAAA,GAAG,CAACO,GAAJ,CAAQ,CAAR,CAAU,KAAV,EAAiBX,KAAjB,EAAN,EAAtB,CADJ,EAGH,CACD,MAEA,qBAAC,IAAD,MACKJ,QAAQ,CAACc,GAAT,CAAa,SAACE,IAAD,QACV,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACD,IAApB,EACGA,IAAI,CAACF,GAAL,CAAS,SAACN,GAAD,QACV,qBAAC,IAAD,EAAM,KAAK,CAAES,MAAM,CAACC,IAApB,EACA,oBAAC,IAAD,EAAM,KAAK,CAAED,MAAM,CAACE,IAApB,EAA2BX,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,EAA3B,CADA,CADU,EAAT,CADH,CADU,EAAb,CADL,CAFA,CAcH,CAED,GAAMJ,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAX,CAAkB,CAC7BP,IAAI,CAAE,CACFQ,aAAa,CAAE,KADb,CAEFC,SAAS,CAAE,QAFT,CADuB,CAM7BP,IAAI,CAAE,CACFQ,MAAM,CAAE,EADN,CAEFC,QAAQ,CAAE,MAFR,CAGFC,OAAO,CAAE,MAHP,CAIFC,QAAQ,CAAE,UAJR,CANuB,CAY7BV,IAAI,CAAE,CACFW,QAAQ,CAAE,EADR,CAEFC,cAAc,CAAE,QAFd,CAZuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, {useState} from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport moment from 'moment'\nimport \"./styles.css\"\n\nexport default function Calendar() {\n    const [calendar,setCalendar] = useState([])\n\n    const value = moment()\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\")\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\")\n    const day = startDay.clone().subtract(1, \"day\")\n    \n\n    while(day.isBefore(endDay,\"day\")) {\n        calendar.push(\n            Array(7).fill(0).map( () => day.add(1,\"day\").clone())\n        )\n    }\n    return( \n    \n    <View>\n        {calendar.map((week) => (\n            <View style={styles.week}>\n              {week.map((day) => (\n              <View style={styles.days}>\n              <Text style={styles.text}>{day.format(\"D\").toString()}</Text>\n              </View>)\n            )}\n            </View>\n        ))}\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    week: {\n        flexDirection: \"row\",\n        textAlign: 'center',\n        \n    },\n    days: {\n        margin: 40,\n        flexWrap: 'wrap',\n        display: 'flex',\n        position: 'relative',\n    },\n    text: {\n        fontSize: 16,\n        justifyContent: \"center\",\n    }\n})"]},"metadata":{},"sourceType":"module"}