{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{StatusBar}from'expo-status-bar';import React,{useState,useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import moment from'moment';import\"./styles.css\";export default function Calendar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),calendar=_useState2[0],setCalendar=_useState2[1];var _useState3=useState(moment()),_useState4=_slicedToArray(_useState3,2),value=_useState4[0],setValue=_useState4[1];var startDay=value.clone().startOf(\"month\").startOf(\"week\");var endDay=value.clone().endOf(\"month\").endOf(\"week\");var day=startDay.clone().subtract(1,\"day\");useEffect(function(){var temp=[];while(day.isBefore(endDay,\"day\")){temp.push(Array(7).fill(0).map(function(){return day.add(1,\"day\").clone();}));}setCalendar(temp);},[value]);return React.createElement(View,null,calendar.map(function(week){return React.createElement(View,{style:styles.week},week.map(function(day){return React.createElement(Button,{onPress:function onPress(){setValue(day);},title:day.format(\"D\").toString()});}));}));}var styles=StyleSheet.create({week:{flexDirection:\"row\",textAlign:'center'},days:{margin:40,flexWrap:'wrap',display:'flex',position:'relative'},text:{fontSize:16,justifyContent:\"center\"}});","map":{"version":3,"sources":["/home/isogogo/calendarProject-master/Calendar.js"],"names":["StatusBar","React","useState","useEffect","moment","Calendar","calendar","setCalendar","value","setValue","startDay","clone","startOf","endDay","endOf","day","subtract","temp","isBefore","push","Array","fill","map","add","week","styles","format","toString","StyleSheet","create","flexDirection","textAlign","days","margin","flexWrap","display","position","text","fontSize","justifyContent"],"mappings":"iEAAA,OAASA,SAAT,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,C,2KAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,qBAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eACAH,QAAQ,CAAC,EAAD,CADR,wCACxBI,QADwB,eACfC,WADe,8BAELL,QAAQ,CAACE,MAAM,EAAP,CAFH,yCAExBI,KAFwB,eAEjBC,QAFiB,eAI/B,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB,CACA,GAAMC,CAAAA,MAAM,CAAGL,KAAK,CAACG,KAAN,GAAcG,KAAd,CAAoB,OAApB,EAA6BA,KAA7B,CAAmC,MAAnC,CAAf,CACA,GAAMC,CAAAA,GAAG,CAAGL,QAAQ,CAACC,KAAT,GAAiBK,QAAjB,CAA0B,CAA1B,CAA6B,KAA7B,CAAZ,CAEAb,SAAS,CAAC,UAAM,CACZ,GAAMc,CAAAA,IAAI,CAAI,EAAd,CACA,MAAMF,GAAG,CAACG,QAAJ,CAAaL,MAAb,CAAoB,KAApB,CAAN,CAAkC,CAC9BI,IAAI,CAACE,IAAL,CACIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,EAAiBC,GAAjB,CAAsB,iBAAMP,CAAAA,GAAG,CAACQ,GAAJ,CAAQ,CAAR,CAAU,KAAV,EAAiBZ,KAAjB,EAAN,EAAtB,CADJ,EAGH,CACDJ,WAAW,CAACU,IAAD,CAAX,CACH,CARQ,CAQN,CAACT,KAAD,CARM,CAAT,CAWA,MAEA,qBAAC,IAAD,MACKF,QAAQ,CAACgB,GAAT,CAAa,SAACE,IAAD,QACV,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACD,IAApB,EACGA,IAAI,CAACF,GAAL,CAAS,SAACP,GAAD,QACV,qBAAC,MAAD,EAEA,OAAO,CAAE,kBAAI,CAACN,QAAQ,CAACM,GAAD,CAAR,CAAc,CAF5B,CAGA,KAAK,CAAEA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,EAHP,EADU,EAAT,CADH,CADU,EAAb,CADL,CAFA,CAgBH,CAED,GAAMF,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC7BL,IAAI,CAAE,CACFM,aAAa,CAAE,KADb,CAEFC,SAAS,CAAE,QAFT,CADuB,CAM7BC,IAAI,CAAE,CACFC,MAAM,CAAE,EADN,CAEFC,QAAQ,CAAE,MAFR,CAGFC,OAAO,CAAE,MAHP,CAIFC,QAAQ,CAAE,UAJR,CANuB,CAY7BC,IAAI,CAAE,CACFC,QAAQ,CAAE,EADR,CAEFC,cAAc,CAAE,QAFd,CAZuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, {useState, useEffect} from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport moment from 'moment'\nimport \"./styles.css\"\n\nexport default function Calendar() {\n    const [calendar,setCalendar] = useState([])\n    const [value, setValue] = useState(moment())\n\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\")\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\")\n    const day = startDay.clone().subtract(1, \"day\")\n\n    useEffect(() => {\n        const temp  = []\n        while(day.isBefore(endDay,\"day\")) {\n            temp.push(\n                Array(7).fill(0).map( () => day.add(1,\"day\").clone())\n            )\n        }\n        setCalendar(temp)\n    }, [value])\n    \n \n    return( \n        \n    <View>\n        {calendar.map((week) => (\n            <View style={styles.week}>\n              {week.map((day) => (\n              <Button \n              \n              onPress={()=>{setValue(day)}}\n              title={day.format(\"D\").toString()}\n              /> \n            ))}\n            </View>\n        ))}\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    week: {\n        flexDirection: \"row\",\n        textAlign: 'center',\n        \n    },\n    days: {\n        margin: 40,\n        flexWrap: 'wrap',\n        display: 'flex',\n        position: 'relative',\n    },\n    text: {\n        fontSize: 16,\n        justifyContent: \"center\",\n    }\n})"]},"metadata":{},"sourceType":"module"}