{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isogogo/calendarProject-master/Calendar.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport moment from 'moment';\nimport \"./styles.css\";\nimport buildCalendar from \"./build\";\nexport default function Calendar() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      calendar = _useState2[0],\n      setCalendar = _useState2[1];\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  useEffect(function () {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  function isSelected(day) {\n    return value.isSame(day, \"day\");\n  }\n\n  function beforeToday(day) {\n    return day.isBefore(new Date(), \"day \");\n  }\n\n  function isSelected(day) {\n    return value.isSame(day, \"day\");\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, calendar.map(function (week) {\n    return React.createElement(View, {\n      style: styles.week,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, week.map(function (day) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.days,\n        onPress: function onPress() {\n          setValue(day);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, day.format(\"D\").toString()));\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  week: {\n    flexDirection: \"row\",\n    textAlign: 'center'\n  },\n  selected: {\n    width: 40,\n    height: 40,\n    margin: 30,\n    backgroundColor: 'red',\n    flexWrap: 'wrap',\n    display: 'flex',\n    position: 'relative'\n  },\n  days: {\n    width: 40,\n    height: 40,\n    margin: 30,\n    flexWrap: 'wrap',\n    display: 'flex',\n    position: 'relative'\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/isogogo/calendarProject-master/Calendar.js"],"names":["StatusBar","React","useState","useEffect","moment","buildCalendar","Calendar","calendar","setCalendar","value","setValue","isSelected","day","isSame","beforeToday","isBefore","Date","map","week","styles","days","format","toString","StyleSheet","create","flexDirection","textAlign","selected","width","height","margin","backgroundColor","flexWrap","display","position","text","fontSize","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACAJ,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACxBK,QADwB;AAAA,MACfC,WADe;;AAAA,mBAELN,QAAQ,CAACE,MAAM,EAAP,CAFH;AAAA;AAAA,MAExBK,KAFwB;AAAA,MAEjBC,QAFiB;;AAK/BP,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,WAAW,CAACH,aAAa,CAACI,KAAD,CAAd,CAAX;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASE,UAAT,CAAoBC,GAApB,EAAyB;AAAC,WAAOH,KAAK,CAACI,MAAN,CAAaD,GAAb,EAAkB,KAAlB,CAAP;AAAiC;;AAC3D,WAASE,WAAT,CAAqBF,GAArB,EAAyB;AAAC,WAAOA,GAAG,CAACG,QAAJ,CAAa,IAAIC,IAAJ,EAAb,EAAyB,MAAzB,CAAP;AAAwC;;AAClE,WAASL,UAAT,CAAoBC,GAApB,EAAyB;AAAC,WAAOH,KAAK,CAACI,MAAN,CAAaD,GAAb,EAAkB,KAAlB,CAAP;AAAiC;;AAE3D,SAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QAAQ,CAACU,GAAT,CAAa,UAACC,IAAD;AAAA,WACV,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACD,GAAL,CAAS,UAACL,GAAD;AAAA,aACV,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAEO,MAAM,CAACC,IADd;AAEA,QAAA,OAAO,EAAE,mBAAI;AAACV,UAAAA,QAAQ,CAACE,GAAD,CAAR;AAAc,SAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,EAAP,CAHA,CADU;AAAA,KAAT,CADH,CADU;AAAA,GAAb,CADL,CAFA;AAgBH;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,aAAa,EAAE,KADb;AAEFC,IAAAA,SAAS,EAAE;AAFT,GADuB;AAM7BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,eAAe,EAAE,KAJX;AAKNC,IAAAA,QAAQ,EAAE,MALJ;AAMNC,IAAAA,OAAO,EAAE,MANH;AAONC,IAAAA,QAAQ,EAAE;AAPJ,GANmB;AAe7Bd,EAAAA,IAAI,EAAE;AACFQ,IAAAA,KAAK,EAAE,EADL;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,MAAM,EAAE,EAHN;AAIFE,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,OAAO,EAAE,MALP;AAMFC,IAAAA,QAAQ,EAAE;AANR,GAfuB;AAuB7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,cAAc,EAAE;AAFd;AAvBuB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, {useState, useEffect} from 'react'\nimport { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native'\nimport moment from 'moment'\nimport \"./styles.css\"\nimport buildCalendar from \"./build\"\n\nexport default function Calendar() {\n    const [calendar,setCalendar] = useState([])\n    const [value, setValue] = useState(moment())\n\n\n    useEffect(() => {\n        setCalendar(buildCalendar(value))\n    }, [value])\n    \n    function isSelected(day) {return value.isSame(day, \"day\");}\n    function beforeToday(day){return day.isBefore(new Date(), \"day \")}\n    function isSelected(day) {return value.isSame(day, \"day\");}\n \n    return( \n        \n    <View>\n        {calendar.map((week) => (\n            <View style={styles.week}>\n              {week.map((day) => (\n              <TouchableOpacity\n              style={styles.days} \n              onPress={()=>{setValue(day)}}> \n              <Text>{day.format(\"D\").toString()}</Text>\n              </TouchableOpacity>\n            ))}\n            </View>\n        ))}\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    week: {\n        flexDirection: \"row\",\n        textAlign: 'center',\n        \n    },\n    selected: {\n        width: 40,\n        height: 40,\n        margin: 30,\n        backgroundColor: 'red',\n        flexWrap: 'wrap',\n        display: 'flex',\n        position: 'relative',\n    },\n    days: {\n        width: 40,\n        height: 40,\n        margin: 30,\n        flexWrap: 'wrap',\n        display: 'flex',\n        position: 'relative',\n    },\n    text: {\n        fontSize: 16,\n        justifyContent: \"center\",\n    }\n})"]},"metadata":{},"sourceType":"module"}