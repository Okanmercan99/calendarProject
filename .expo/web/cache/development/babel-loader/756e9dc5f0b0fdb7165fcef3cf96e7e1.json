{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/isogogo/calendarProject-master/Calendar.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport moment from 'moment';\nimport \"./styles.css\";\nexport default function Calendar() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      calendar = _useState2[0],\n      setCalendar = _useState2[1];\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var startDay = value.clone().startOf(\"month\").startOf(\"week\");\n  var endDay = value.clone().endOf(\"month\").endOf(\"week\");\n  var day = startDay.clone().subtract(1, \"day\");\n  useEffect(function () {\n    var temp = [];\n\n    while (day.isBefore(endDay, \"day\")) {\n      temp.push(Array(7).fill(0).map(function () {\n        return day.add(1, \"day\").clone();\n      }));\n    }\n\n    setCalendar(temp);\n  }, [value]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, calendar.map(function (week) {\n    return React.createElement(View, {\n      style: styles.week,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, week.map(function (day) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.days,\n        onPress: function onPress() {\n          setValue(day);\n          style = {\n            styles: styles\n          };\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, day.format(\"D\").toString()));\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  week: {\n    flexDirection: \"row\",\n    textAlign: 'center'\n  },\n  days: {\n    width: 40,\n    height: 40,\n    margin: 30,\n    flexWrap: 'wrap',\n    display: 'flex',\n    position: 'relative'\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/isogogo/calendarProject-master/Calendar.js"],"names":["StatusBar","React","useState","useEffect","moment","Calendar","calendar","setCalendar","value","setValue","startDay","clone","startOf","endDay","endOf","day","subtract","temp","isBefore","push","Array","fill","map","add","week","styles","days","style","format","toString","StyleSheet","create","flexDirection","textAlign","width","height","margin","flexWrap","display","position","text","fontSize","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACxBI,QADwB;AAAA,MACfC,WADe;;AAAA,mBAELL,QAAQ,CAACE,MAAM,EAAP,CAFH;AAAA;AAAA,MAExBI,KAFwB;AAAA,MAEjBC,QAFiB;;AAI/B,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAN,GAAcC,OAAd,CAAsB,OAAtB,EAA+BA,OAA/B,CAAuC,MAAvC,CAAjB;AACA,MAAMC,MAAM,GAAGL,KAAK,CAACG,KAAN,GAAcG,KAAd,CAAoB,OAApB,EAA6BA,KAA7B,CAAmC,MAAnC,CAAf;AACA,MAAMC,GAAG,GAAGL,QAAQ,CAACC,KAAT,GAAiBK,QAAjB,CAA0B,CAA1B,EAA6B,KAA7B,CAAZ;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMc,IAAI,GAAI,EAAd;;AACA,WAAMF,GAAG,CAACG,QAAJ,CAAaL,MAAb,EAAoB,KAApB,CAAN,EAAkC;AAC9BI,MAAAA,IAAI,CAACE,IAAL,CACIC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,EAAiBC,GAAjB,CAAsB;AAAA,eAAMP,GAAG,CAACQ,GAAJ,CAAQ,CAAR,EAAU,KAAV,EAAiBZ,KAAjB,EAAN;AAAA,OAAtB,CADJ;AAGH;;AACDJ,IAAAA,WAAW,CAACU,IAAD,CAAX;AACH,GARQ,EAQN,CAACT,KAAD,CARM,CAAT;AAWA,SAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACgB,GAAT,CAAa,UAACE,IAAD;AAAA,WACV,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACF,GAAL,CAAS,UAACP,GAAD;AAAA,aACV,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAEU,MAAM,CAACC,IADd;AAEA,QAAA,OAAO,EAAE,mBAAI;AACTjB,UAAAA,QAAQ,CAACM,GAAD,CAAR;AACAY,UAAAA,KAAK,GAAC;AAACF,YAAAA,MAAM,EAANA;AAAD,WAAN;AACC,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOV,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,QAAhB,EAAP,CANA,CADU;AAAA,KAAT,CADH,CADU;AAAA,GAAb,CADL,CAFA;AAmBH;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,aAAa,EAAE,KADb;AAEFC,IAAAA,SAAS,EAAE;AAFT,GADuB;AAM7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,KAAK,EAAE,EADL;AAEFC,IAAAA,MAAM,EAAE,EAFN;AAGFC,IAAAA,MAAM,EAAE,EAHN;AAIFC,IAAAA,QAAQ,EAAE,MAJR;AAKFC,IAAAA,OAAO,EAAE,MALP;AAMFC,IAAAA,QAAQ,EAAE;AANR,GANuB;AAc7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,cAAc,EAAE;AAFd;AAduB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, {useState, useEffect} from 'react'\nimport { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native'\nimport moment from 'moment'\nimport \"./styles.css\"\n\nexport default function Calendar() {\n    const [calendar,setCalendar] = useState([])\n    const [value, setValue] = useState(moment())\n\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\")\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\")\n    const day = startDay.clone().subtract(1, \"day\")\n\n    useEffect(() => {\n        const temp  = []\n        while(day.isBefore(endDay,\"day\")) {\n            temp.push(\n                Array(7).fill(0).map( () => day.add(1,\"day\").clone())\n            )\n        }\n        setCalendar(temp)\n    }, [value])\n    \n \n    return( \n        \n    <View>\n        {calendar.map((week) => (\n            <View style={styles.week}>\n              {week.map((day) => (\n              <TouchableOpacity\n              style={styles.days} \n              onPress={()=>{\n                  setValue(day);\n                  style={styles}\n                  }}> \n              <Text>{day.format(\"D\").toString()}</Text>\n              </TouchableOpacity>\n            ))}\n            </View>\n        ))}\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    week: {\n        flexDirection: \"row\",\n        textAlign: 'center',\n        \n    },\n    days: {\n        width: 40,\n        height: 40,\n        margin: 30,\n        flexWrap: 'wrap',\n        display: 'flex',\n        position: 'relative',\n    },\n    text: {\n        fontSize: 16,\n        justifyContent: \"center\",\n    }\n})"]},"metadata":{},"sourceType":"module"}